package codingtest_training_project;
import java.util.*;

public class HashMapExample {
	public static void main(String[] args) {
		
		 /* 수많은 마라톤 선수들이 마라톤에 참여하였습니다. 단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다.

		마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 완주한 선수들의 이름이 담긴 배열 completion이 주어질 때, 완주하지 못한 선수의 이름을 return 하도록 solution 함수를 작성해주세요.

		제한사항
		마라톤 경기에 참여한 선수의 수는 1명 이상 100,000명 이하입니다.
		completion의 길이는 participant의 길이보다 1 작습니다.
		참가자의 이름은 1개 이상 20개 이하의 알파벳 소문자로 이루어져 있습니다.
		참가자 중에는 동명이인이 있을 수 있습니다.
		입출력 예
		participant	completion	return
		["leo", "kiki", "eden"]	["eden", "kiki"]	"leo"
		["marina", "josipa", "nikola", "vinko", "filipa"]	["josipa", "filipa", "marina", "nikola"]	"vinko"
		["mislav", "stanko", "mislav", "ana"]	["stanko", "ana", "mislav"]	"mislav"
		
		입출력 예 설명
		예제 #1
		"leo"는 참여자 명단에는 있지만, 완주자 명단에는 없기 때문에 완주하지 못했습니다.

		예제 #2
		"vinko"는 참여자 명단에는 있지만, 완주자 명단에는 없기 때문에 완주하지 못했습니다.

		예제 #3
		"mislav"는 참여자 명단에는 두 명이 있지만, 완주자 명단에는 한 명밖에 없기 때문에 한명은 완주하지 못했습니다. */
		
		String[] participant = {"mislav", "stanko", "mislav", "ana"}; //참가자
		String[] completion = {"stanko", "ana", "mislav"}; //완주자

		Solution solution = new Solution();
		System.out.println(solution.solution(participant, completion));
	}
	
	static class Solution {
		public String solution(String[] participant, String[] completion) {
		    String answer = "";
		    HashMap<String, Integer> hs = new HashMap<>(); //이름을 Key, index를 Value로 하는 HashMap 선언
		    
		    for(String name : participant) { //참가자만큼 반복하면서 hs에 값 세팅(이때, 참가자 이름을 Key로 하는 hashMap 이고, index는 1씩 증가시켜서 value에 담는다 
		        hs.put(name, hs.getOrDefault(name, 0) + 1); 
		    }
		    
		    for(String name : completion) {  //완주자만큼 반복하면서 hs에 값 세팅(이때, 참가자 이름을 Key로 하는 hashMap 이고, index는 1씩 감소시켜서 value에 담는다
		        hs.put(name, hs.get(name) - 1);
		    }
		    
		    Iterator<Map.Entry<String, Integer>> iter = hs.entrySet().iterator(); //hashMap Iterator 객체 생성

		    while(iter.hasNext()){
		        Map.Entry<String, Integer> entry = iter.next();
		        if (entry.getValue() != 0){ //참가자에도 있고, 완주자에도 있는 경우 value를 1씩 감소시켜 0으로 만들었으므로 1이 아니면 완주자 목록에 없음
		            answer = entry.getKey();
		            break;
		        }
		    }
		    
		    return answer;
		}
	}
}


